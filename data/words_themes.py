from main import dp, types, ParseMode
import words



# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ü–û–ß–ê–¢–ö–û–í–Ü –°–õ–û–í–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–ü–æ—á–∞—Ç–∫–æ–≤—ñ –°–ª–æ–≤–∞ üí™')
async def send_dict_start_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.start_words.items()])
    await message.answer(formatted_dict, parse_mode=ParseMode.MARKDOWN)



# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ü–û–î–û–†–û–ñ (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == 'C–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –ü–æ–¥–æ—Ä–æ–∂ ‚úàÔ∏è')
async def send_dict_trip_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.trip_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –á–ñ–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –á–∂–∞ üçå')
async def send_dict_trip_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.food_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)

# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ö–û–õ–¨–û–†–ò (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –ö–æ–ª—å–æ—Ä–∏ üü£')
async def send_dict_colors_w(message: types.Message):
    formatted_dict = '\n'.join([f'{word} - {translation}' for word, translation in words.colors_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –†–û–ó–ú–û–í–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == 'C–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –†–æ–∑–º–æ–≤–∞ üó£')
async def send_dict_conversation_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.conversation_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)
    

# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –¢–í–ê–†–ò–ù–ò (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –¢–≤–∞—Ä–∏–Ω–∏ üêç')
async def send_dict_animals_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.animals_theme_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ê–ô–¢–Ü (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –ê–π—Ç—ñ üíª')
async def send_dict_it_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.it_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–û–ú–ê–ù–î–ò –°–ü–û–†–¢ (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –°–ø–æ—Ä—Ç ‚öΩÔ∏è')
async def send_dict_sport_w(message: types.Message):
    formatted_dict = "\n".join([f'{words} - {translation}' for word, translation in words.sport_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –®–ö–û–õ–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –®–∫–æ–ª–∞ üè´')
async def send_dict_school_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.school_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)



# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ú–£–ó–ò–ö–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –ú—É–∑–∏–∫–∞üéµ')
async def send_dict_school_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.music_word.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ö–í–ê–†–¢–ò–†–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –ú—É–∑–∏–∫–∞üéµ')
async def send_dict_school_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.house_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –†–û–ë–û–¢–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –†–æ–±–æ—Ç–∞ üíº')
async def send_dict_school_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.job_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –§–Ü–õ–¨–ú–ò (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –§—ñ–ª—å–º–∏ üé¨')
async def send_dict_school_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.job_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)


# –û–ë–†–û–ë–ù–ò–ö –ö–ù–û–ü–ö–ò –ú–û–î–ê (–ó–ê –¢–ï–ú–ê–ú–ò)
@dp.message(lambda message: message.text == '–°–ª–æ–≤–∞ –ù–∞ –¢–µ–º—É –ú–æ–¥–∞ üíÑ')
async def send_dict_school_w(message: types.Message):
    formatted_dict = "\n".join([f"{word} - {translation}" for word, translation in words.job_words.items()])
    await message.reply(formatted_dict, parse_mode=ParseMode.MARKDOWN)